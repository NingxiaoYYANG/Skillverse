{"ast":null,"code":"var _jsxFileName = \"/Users/ahua/Desktop/Github project/Skillverse/Skillverse/project/contacts/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport { abi, address } from \"./config.js\";\nimport Monster from './pages/Monster';\nimport { Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userWalletAddress, setUserWalletAddress] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [monsters, setMonsters] = useState([]);\n  const [id, setIdFn] = useState(null);\n  useEffect(() => {\n    async function load() {\n      if (window.ethereum) {\n        setWeb3(new Web3(window.ethereum));\n      } else {\n        alert(\"Please install MetaMask or any Ethereum Extension Wallet\");\n      }\n      const storedAddress = window.localStorage.getItem(\"userWalletAddress\");\n      setUserWalletAddress(storedAddress);\n      showUserDashboard();\n    }\n    load();\n  }, []);\n  useEffect(() => {\n    if (web3) {\n      const contractInstance = new web3.eth.Contract(abi, address);\n      setContract(contractInstance);\n    }\n  }, [web3]);\n  const loginWithEth = async () => {\n    try {\n      if (web3) {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const selectedAccount = accounts[0];\n        setUserWalletAddress(selectedAccount);\n        window.localStorage.setItem(\"userWalletAddress\", selectedAccount);\n        showUserDashboard();\n      } else {\n        alert(\"Wallet not found\");\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const logout = () => {\n    setUserWalletAddress(null);\n    window.localStorage.removeItem(\"userWalletAddress\");\n    showUserDashboard();\n  };\n  const showUserDashboard = async () => {\n    if (!userWalletAddress) {\n      document.title = \"Web3 Login\";\n      return;\n    }\n    document.title = \"Web3 Dashboard\";\n    getWalletBalance();\n    getMonstersByOwner(userWalletAddress);\n  };\n  const getWalletBalance = async () => {\n    if (!userWalletAddress || !web3) {\n      setBalance(null);\n      return;\n    }\n    const balance = await web3.eth.getBalance(userWalletAddress);\n    setBalance(web3.utils.fromWei(balance, \"ether\"));\n  };\n  const getMonstersByOwner = async owner => {\n    if (!contract) {\n      return [];\n    }\n    try {\n      const ids = await contract.methods.getMonstersByOwner(owner).call();\n      setMonsters(ids);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: userWalletAddress ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Web3 Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current wallet address: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: userWalletAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wallet balance: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: balance ? `${balance} ETH` : \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/monster\",\n          element: /*#__PURE__*/_jsxDEV(Monster, {\n            setIdFn: id,\n            setContractFn: contract\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Web3 Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please install MetaMask or any Ethereum Extension Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-btn\",\n        onClick: loginWithEth,\n        children: \"Login with Ethereum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BwplYA3O9JN/kIdVT93IoQiqoR0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Web3","abi","address","Monster","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","userWalletAddress","setUserWalletAddress","web3","setWeb3","balance","setBalance","contract","setContract","monsters","setMonsters","id","setIdFn","load","window","ethereum","alert","storedAddress","localStorage","getItem","showUserDashboard","contractInstance","eth","Contract","loginWithEth","accounts","request","method","selectedAccount","setItem","error","logout","removeItem","document","title","getWalletBalance","getMonstersByOwner","getBalance","utils","fromWei","owner","ids","methods","call","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","path","element","setContractFn","_c","$RefreshReg$"],"sources":["/Users/ahua/Desktop/Github project/Skillverse/Skillverse/project/contacts/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport { abi, address } from \"./config.js\";\nimport Monster from './pages/Monster';\nimport {\n  Routes,\n  Route\n} from 'react-router-dom';\n\nfunction App() {\n  const [userWalletAddress, setUserWalletAddress] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [monsters, setMonsters] = useState([]);\n  const [id, setIdFn] = useState(null);\n\n  useEffect(() => {\n    async function load() {\n      if (window.ethereum) {\n        setWeb3(new Web3(window.ethereum));\n      } else {\n        alert(\"Please install MetaMask or any Ethereum Extension Wallet\");\n      }\n\n      const storedAddress = window.localStorage.getItem(\"userWalletAddress\");\n      setUserWalletAddress(storedAddress);\n      showUserDashboard();\n    }\n\n    load();\n  }, []);\n\n  useEffect(() => {\n    if (web3) {\n      const contractInstance = new web3.eth.Contract(abi, address);\n      setContract(contractInstance);\n    }\n  }, [web3]);\n\n  const loginWithEth = async () => {\n    try {\n      if (web3) {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const selectedAccount = accounts[0];\n\n        setUserWalletAddress(selectedAccount);\n        window.localStorage.setItem(\"userWalletAddress\", selectedAccount);\n\n        showUserDashboard();\n      } else {\n        alert(\"Wallet not found\");\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const logout = () => {\n    setUserWalletAddress(null);\n    window.localStorage.removeItem(\"userWalletAddress\");\n    showUserDashboard();\n  };\n\n  const showUserDashboard = async () => {\n    if (!userWalletAddress) {\n      document.title = \"Web3 Login\";\n      return;\n    }\n\n    document.title = \"Web3 Dashboard\";\n    getWalletBalance();\n    getMonstersByOwner(userWalletAddress);\n  };\n\n  const getWalletBalance = async () => {\n    if (!userWalletAddress || !web3) {\n      setBalance(null);\n      return;\n    }\n\n    const balance = await web3.eth.getBalance(userWalletAddress);\n    setBalance(web3.utils.fromWei(balance, \"ether\"));\n  };\n\n  const getMonstersByOwner = async (owner) => {\n    if (!contract) {\n      return [];\n    }\n\n    try {\n      const ids = await contract.methods.getMonstersByOwner(owner).call();\n      setMonsters(ids);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      {userWalletAddress ? (\n        <>\n          <h1>Web3 Dashboard</h1>\n          <p>\n            Current wallet address: <span>{userWalletAddress}</span>\n          </p>\n          <p>\n            Wallet balance: <span>{balance ? `${balance} ETH` : \"Loading...\"}</span>\n          </p>\n          <button className=\"logout-btn\" onClick={logout}>\n            Logout\n          </button>\n          <Routes>\n            <Route path='/monster' element={<Monster setIdFn={id} setContractFn={contract}/>}></Route>\n          </Routes>\n        </>\n      ) : (\n        <>\n          <h1>Web3 Login</h1>\n          <p>Please install MetaMask or any Ethereum Extension Wallet</p>\n          <button className=\"login-btn\" onClick={loginWithEth}>\n            Login with Ethereum\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}