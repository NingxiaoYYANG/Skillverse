{"ast":null,"code":"var _jsxFileName = \"/Users/ahua/Desktop/Github project/Skillverse/Skillverse/project/contacts/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport { abi, address } from \"./config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userWalletAddress, setUserWalletAddress] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [monsters, setMonsters] = useState([]);\n  useEffect(() => {\n    async function load() {\n      if (window.ethereum) {\n        setWeb3(new Web3(window.ethereum));\n      } else {\n        alert(\"Please install MetaMask or any Ethereum Extension Wallet\");\n      }\n      const storedAddress = window.localStorage.getItem(\"userWalletAddress\");\n      setUserWalletAddress(storedAddress);\n      showUserDashboard();\n    }\n    load();\n  }, []);\n  useEffect(() => {\n    if (web3) {\n      const contractInstance = new web3.eth.Contract(abi, address);\n      setContract(contractInstance);\n    }\n  }, [web3]);\n  const loginWithEth = async () => {\n    try {\n      if (web3) {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const selectedAccount = accounts[0];\n        setUserWalletAddress(selectedAccount);\n        window.localStorage.setItem(\"userWalletAddress\", selectedAccount);\n        showUserDashboard();\n      } else {\n        alert(\"Wallet not found\");\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const logout = () => {\n    setUserWalletAddress(null);\n    window.localStorage.removeItem(\"userWalletAddress\");\n    showUserDashboard();\n  };\n  const showUserDashboard = async () => {\n    if (!userWalletAddress) {\n      document.title = \"Web3 Login\";\n      return;\n    }\n    document.title = \"Web3 Dashboard\";\n    getWalletBalance();\n    getMonstersByOwner(userWalletAddress);\n  };\n  const getWalletBalance = async () => {\n    if (!userWalletAddress || !web3) {\n      setBalance(null);\n      return;\n    }\n    const balance = await web3.eth.getBalance(userWalletAddress);\n    setBalance(web3.utils.fromWei(balance, \"ether\"));\n  };\n  const getMonstersByOwner = async owner => {\n    if (!contract) {\n      return [];\n    }\n    try {\n      const ids = await contract.methods.getMonstersByOwner(owner).call();\n      setMonsters(ids);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [userWalletAddress ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Web3 Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current wallet address: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: userWalletAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wallet balance: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: balance ? `${balance} ETH` : \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Monsters:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monsters\",\n        children: monsters.map(id => /*#__PURE__*/_jsxDEV(MonsterCard, {\n          id: id,\n          contract: contract\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Web3 Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please install MetaMask or any Ethereum Extension Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-btn\",\n        onClick: loginWithEth,\n        children: \"Login with Ethereum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/monster\",\n        element: /*#__PURE__*/_jsxDEV(Monster, {\n          setIdFn: id,\n          setContractFn: contract\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ls2ziqv/imU6sqEwy1Gz6aKhzSw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Web3","abi","address","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","userWalletAddress","setUserWalletAddress","web3","setWeb3","balance","setBalance","contract","setContract","monsters","setMonsters","load","window","ethereum","alert","storedAddress","localStorage","getItem","showUserDashboard","contractInstance","eth","Contract","loginWithEth","accounts","request","method","selectedAccount","setItem","error","logout","removeItem","document","title","getWalletBalance","getMonstersByOwner","getBalance","utils","fromWei","owner","ids","methods","call","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","id","MonsterCard","onClick","Routes","Route","path","element","Monster","setIdFn","setContractFn","_c","$RefreshReg$"],"sources":["/Users/ahua/Desktop/Github project/Skillverse/Skillverse/project/contacts/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport { abi, address } from \"./config.js\";\n\nfunction App() {\n  const [userWalletAddress, setUserWalletAddress] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [monsters, setMonsters] = useState([]);\n\n  useEffect(() => {\n    async function load() {\n      if (window.ethereum) {\n        setWeb3(new Web3(window.ethereum));\n      } else {\n        alert(\"Please install MetaMask or any Ethereum Extension Wallet\");\n      }\n\n      const storedAddress = window.localStorage.getItem(\"userWalletAddress\");\n      setUserWalletAddress(storedAddress);\n      showUserDashboard();\n    }\n\n    load();\n  }, []);\n\n  useEffect(() => {\n    if (web3) {\n      const contractInstance = new web3.eth.Contract(abi, address);\n      setContract(contractInstance);\n    }\n  }, [web3]);\n\n  const loginWithEth = async () => {\n    try {\n      if (web3) {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const selectedAccount = accounts[0];\n\n        setUserWalletAddress(selectedAccount);\n        window.localStorage.setItem(\"userWalletAddress\", selectedAccount);\n\n        showUserDashboard();\n      } else {\n        alert(\"Wallet not found\");\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const logout = () => {\n    setUserWalletAddress(null);\n    window.localStorage.removeItem(\"userWalletAddress\");\n    showUserDashboard();\n  };\n\n  const showUserDashboard = async () => {\n    if (!userWalletAddress) {\n      document.title = \"Web3 Login\";\n      return;\n    }\n\n    document.title = \"Web3 Dashboard\";\n    getWalletBalance();\n    getMonstersByOwner(userWalletAddress);\n  };\n\n  const getWalletBalance = async () => {\n    if (!userWalletAddress || !web3) {\n      setBalance(null);\n      return;\n    }\n\n    const balance = await web3.eth.getBalance(userWalletAddress);\n    setBalance(web3.utils.fromWei(balance, \"ether\"));\n  };\n\n  const getMonstersByOwner = async (owner) => {\n    if (!contract) {\n      return [];\n    }\n\n    try {\n      const ids = await contract.methods.getMonstersByOwner(owner).call();\n      setMonsters(ids);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      {userWalletAddress ? (\n        <>\n          <h1>Web3 Dashboard</h1>\n          <p>\n            Current wallet address: <span>{userWalletAddress}</span>\n          </p>\n          <p>\n            Wallet balance: <span>{balance ? `${balance} ETH` : \"Loading...\"}</span>\n          </p>\n          <h2>Monsters:</h2>\n          <div className=\"monsters\">\n            {monsters.map((id) => (\n              <MonsterCard key={id} id={id} contract={contract} />\n            ))}\n          </div>\n          <button className=\"logout-btn\" onClick={logout}>\n            Logout\n          </button>\n        </>\n      ) : (\n        <>\n          <h1>Web3 Login</h1>\n          <p>Please install MetaMask or any Ethereum Extension Wallet</p>\n          <button className=\"login-btn\" onClick={loginWithEth}>\n            Login with Ethereum\n          </button>\n        </>\n      )}\n      <Routes>\n        <Route path='/monster' element={<Monster setIdFn={id} setContractFn={contract}/>}></Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAO,WAAW;AAClB,SAASC,GAAG,EAAEC,OAAO,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,eAAeqB,IAAIA,CAAA,EAAG;MACpB,IAAIC,MAAM,CAACC,QAAQ,EAAE;QACnBT,OAAO,CAAC,IAAIZ,IAAI,CAACoB,MAAM,CAACC,QAAQ,CAAC,CAAC;MACpC,CAAC,MAAM;QACLC,KAAK,CAAC,0DAA0D,CAAC;MACnE;MAEA,MAAMC,aAAa,GAAGH,MAAM,CAACI,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;MACtEf,oBAAoB,CAACa,aAAa,CAAC;MACnCG,iBAAiB,CAAC,CAAC;IACrB;IAEAP,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd,IAAIa,IAAI,EAAE;MACR,MAAMgB,gBAAgB,GAAG,IAAIhB,IAAI,CAACiB,GAAG,CAACC,QAAQ,CAAC5B,GAAG,EAAEC,OAAO,CAAC;MAC5Dc,WAAW,CAACW,gBAAgB,CAAC;IAC/B;EACF,CAAC,EAAE,CAAChB,IAAI,CAAC,CAAC;EAEV,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,IAAInB,IAAI,EAAE;QACR,MAAMoB,QAAQ,GAAG,MAAMX,MAAM,CAACC,QAAQ,CAACW,OAAO,CAAC;UAC7CC,MAAM,EAAE;QACV,CAAC,CAAC;QACF,MAAMC,eAAe,GAAGH,QAAQ,CAAC,CAAC,CAAC;QAEnCrB,oBAAoB,CAACwB,eAAe,CAAC;QACrCd,MAAM,CAACI,YAAY,CAACW,OAAO,CAAC,mBAAmB,EAAED,eAAe,CAAC;QAEjER,iBAAiB,CAAC,CAAC;MACrB,CAAC,MAAM;QACLJ,KAAK,CAAC,kBAAkB,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdd,KAAK,CAACc,KAAK,CAAC;IACd;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB3B,oBAAoB,CAAC,IAAI,CAAC;IAC1BU,MAAM,CAACI,YAAY,CAACc,UAAU,CAAC,mBAAmB,CAAC;IACnDZ,iBAAiB,CAAC,CAAC;EACrB,CAAC;EAED,MAAMA,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACjB,iBAAiB,EAAE;MACtB8B,QAAQ,CAACC,KAAK,GAAG,YAAY;MAC7B;IACF;IAEAD,QAAQ,CAACC,KAAK,GAAG,gBAAgB;IACjCC,gBAAgB,CAAC,CAAC;IAClBC,kBAAkB,CAACjC,iBAAiB,CAAC;EACvC,CAAC;EAED,MAAMgC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAAChC,iBAAiB,IAAI,CAACE,IAAI,EAAE;MAC/BG,UAAU,CAAC,IAAI,CAAC;MAChB;IACF;IAEA,MAAMD,OAAO,GAAG,MAAMF,IAAI,CAACiB,GAAG,CAACe,UAAU,CAAClC,iBAAiB,CAAC;IAC5DK,UAAU,CAACH,IAAI,CAACiC,KAAK,CAACC,OAAO,CAAChC,OAAO,EAAE,OAAO,CAAC,CAAC;EAClD,CAAC;EAED,MAAM6B,kBAAkB,GAAG,MAAOI,KAAK,IAAK;IAC1C,IAAI,CAAC/B,QAAQ,EAAE;MACb,OAAO,EAAE;IACX;IAEA,IAAI;MACF,MAAMgC,GAAG,GAAG,MAAMhC,QAAQ,CAACiC,OAAO,CAACN,kBAAkB,CAACI,KAAK,CAAC,CAACG,IAAI,CAAC,CAAC;MACnE/B,WAAW,CAAC6B,GAAG,CAAC;IAClB,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdc,OAAO,CAACd,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEhC,OAAA;IAAA+C,QAAA,GACG1C,iBAAiB,gBAChBL,OAAA,CAAAE,SAAA;MAAA6C,QAAA,gBACE/C,OAAA;QAAA+C,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBnD,OAAA;QAAA+C,QAAA,GAAG,0BACuB,eAAA/C,OAAA;UAAA+C,QAAA,EAAO1C;QAAiB;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eACJnD,OAAA;QAAA+C,QAAA,GAAG,kBACe,eAAA/C,OAAA;UAAA+C,QAAA,EAAOtC,OAAO,GAAI,GAAEA,OAAQ,MAAK,GAAG;QAAY;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eACJnD,OAAA;QAAA+C,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBnD,OAAA;QAAKoD,SAAS,EAAC,UAAU;QAAAL,QAAA,EACtBlC,QAAQ,CAACwC,GAAG,CAAEC,EAAE,iBACftD,OAAA,CAACuD,WAAW;UAAUD,EAAE,EAAEA,EAAG;UAAC3C,QAAQ,EAAEA;QAAS,GAA/B2C,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+B,CACpD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNnD,OAAA;QAAQoD,SAAS,EAAC,YAAY;QAACI,OAAO,EAAEvB,MAAO;QAAAc,QAAA,EAAC;MAEhD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CAAC,gBAEHnD,OAAA,CAAAE,SAAA;MAAA6C,QAAA,gBACE/C,OAAA;QAAA+C,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBnD,OAAA;QAAA+C,QAAA,EAAG;MAAwD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC/DnD,OAAA;QAAQoD,SAAS,EAAC,WAAW;QAACI,OAAO,EAAE9B,YAAa;QAAAqB,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CACH,eACDnD,OAAA,CAACyD,MAAM;MAAAV,QAAA,eACL/C,OAAA,CAAC0D,KAAK;QAACC,IAAI,EAAC,UAAU;QAACC,OAAO,eAAE5D,OAAA,CAAC6D,OAAO;UAACC,OAAO,EAAER,EAAG;UAACS,aAAa,EAAEpD;QAAS;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC/C,EAAA,CA7HQD,GAAG;AAAA6D,EAAA,GAAH7D,GAAG;AA+HZ,eAAeA,GAAG;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}